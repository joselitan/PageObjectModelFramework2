{"uid":"b81af3b7ff107cf0","name":"test_printCarNamesAndPrices[chrome-Hyundai-Hyundaiii Cars]","fullName":"test_carwale.Test_CarWale#test_printCarNamesAndPrices","historyId":"9100d83ea1cecb78d334c3c490565620","time":{"start":1664272376660,"stop":1664272379227,"duration":2567},"status":"failed","statusMessage":"AssertionError: Not on the correct page as title is not matching\nassert 'Hyundai Cars' == 'Hyundaiii Cars'\n  - Hyundaiii Cars\n  ?        --\n  + Hyundai Cars","statusTrace":"self = <Testcases.test_carwale.Test_CarWale object at 0x00000279EECE4B20>\ncarBrand = 'Hyundai', carTitle = 'Hyundaiii Cars'\n\n    @pytest.mark.parametrize(\"carBrand, carTitle\",\n                             dataProvider.get_data(\"NewCarsTest\"))\n    def test_printCarNamesAndPrices(self, carBrand, carTitle):\n        log.logger.info(\"******Inside Car Names and Prices Testt*********\")\n        home = HomePage(self.driver)\n        car = CarBase(self.driver)\n        print(\"Car brand is: \", carBrand)\n        if carBrand == \"Hyundai\":\n            home.gotoNewCars().selectHyundai()\n            title = car.getCarTitle()\n            print((\"car title is: \" + title).encode(\"utf8\"))\n>           assert title == carTitle, \"Not on the correct page as title is not matching\"\nE           AssertionError: Not on the correct page as title is not matching\nE           assert 'Hyundai Cars' == 'Hyundaiii Cars'\nE             - Hyundaiii Cars\nE             ?        --\nE             + Hyundai Cars\n\ntest_carwale.py:67: AssertionError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"get_browser","time":{"start":1664272370839,"stop":1664272376653,"duration":5814},"status":"passed","steps":[],"attachments":[],"parameters":[],"attachmentsCount":0,"shouldDisplayMessage":false,"stepsCount":0,"hasContent":false},{"name":"log_on_failure","time":{"start":1664272376655,"stop":1664272376656,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"attachmentsCount":0,"shouldDisplayMessage":false,"stepsCount":0,"hasContent":false}],"testStage":{"status":"failed","statusMessage":"AssertionError: Not on the correct page as title is not matching\nassert 'Hyundai Cars' == 'Hyundaiii Cars'\n  - Hyundaiii Cars\n  ?        --\n  + Hyundai Cars","statusTrace":"self = <Testcases.test_carwale.Test_CarWale object at 0x00000279EECE4B20>\ncarBrand = 'Hyundai', carTitle = 'Hyundaiii Cars'\n\n    @pytest.mark.parametrize(\"carBrand, carTitle\",\n                             dataProvider.get_data(\"NewCarsTest\"))\n    def test_printCarNamesAndPrices(self, carBrand, carTitle):\n        log.logger.info(\"******Inside Car Names and Prices Testt*********\")\n        home = HomePage(self.driver)\n        car = CarBase(self.driver)\n        print(\"Car brand is: \", carBrand)\n        if carBrand == \"Hyundai\":\n            home.gotoNewCars().selectHyundai()\n            title = car.getCarTitle()\n            print((\"car title is: \" + title).encode(\"utf8\"))\n>           assert title == carTitle, \"Not on the correct page as title is not matching\"\nE           AssertionError: Not on the correct page as title is not matching\nE           assert 'Hyundai Cars' == 'Hyundaiii Cars'\nE             - Hyundaiii Cars\nE             ?        --\nE             + Hyundai Cars\n\ntest_carwale.py:67: AssertionError","steps":[],"attachments":[{"uid":"2dd561b4bb59de1a","name":"log","source":"2dd561b4bb59de1a.txt","type":"text/plain","size":331}],"parameters":[],"attachmentsCount":1,"shouldDisplayMessage":true,"stepsCount":0,"hasContent":true},"afterStages":[{"name":"log_on_failure::0","time":{"start":1664272379835,"stop":1664272380640,"duration":805},"status":"passed","steps":[],"attachments":[{"uid":"97e941d49a35c627","name":"dologin","source":"97e941d49a35c627.png","type":"image/png","size":407874}],"parameters":[],"attachmentsCount":1,"shouldDisplayMessage":false,"stepsCount":0,"hasContent":true},{"name":"get_browser::0","time":{"start":1664272380642,"stop":1664272383235,"duration":2593},"status":"passed","steps":[],"attachments":[],"parameters":[],"attachmentsCount":0,"shouldDisplayMessage":false,"stepsCount":0,"hasContent":false}],"labels":[{"name":"tag","value":"@pytest.mark.usefixtures('log_on_failure', 'get_browser')"},{"name":"suite","value":"test_carwale"},{"name":"subSuite","value":"Test_CarWale"},{"name":"host","value":"VR-C1D0E-007"},{"name":"thread","value":"28860-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"test_carwale"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"carBrand","value":"'Hyundai'"},{"name":"carTitle","value":"'Hyundaiii Cars'"},{"name":"get_browser","value":"'chrome'"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":3,"broken":0,"skipped":0,"passed":0,"unknown":0,"total":3},"items":[{"uid":"5980661d73dfcfde","reportUrl":"http://localhost:8080/job/PageObjectModelPython/27/allure/#testresult/5980661d73dfcfde","status":"failed","statusDetails":"AssertionError: Not on the correct page as title is not matching\nassert 'Hyundai Cars' == 'Hyundaiii Cars'\n  - Hyundaiii Cars\n  ?        --\n  + Hyundai Cars","time":{"start":1664272376660,"stop":1664272379227,"duration":2567}},{"uid":"a8efddf7b2dc9d45","reportUrl":"http://localhost:8080/job/PageObjectModelPython/13/allure/#testresult/a8efddf7b2dc9d45","status":"failed","statusDetails":"AssertionError: Not on the correct page as title is not matching\nassert 'Hyundai Cars' == 'Hyundaiii Cars'\n  - Hyundaiii Cars\n  ?        --\n  + Hyundai Cars","time":{"start":1664200239378,"stop":1664200241655,"duration":2277}}]},"tags":["@pytest.mark.usefixtures('log_on_failure', 'get_browser')"]},"source":"b81af3b7ff107cf0.json","parameterValues":["'Hyundai'","'Hyundaiii Cars'","'chrome'"]}